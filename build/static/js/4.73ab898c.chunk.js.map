{"version":3,"sources":["assets/jss/cardBodyStyle.ts","components/Card/CardBody.tsx","assets/jss/cardFooterStyle.ts","components/Card/CardFooter.tsx","assets/jss/cardHeaderStyle.ts","components/Card/CardHeader.tsx","assets/jss/dashboardStyle.ts","views/Home/DataTable/data.ts","views/Home/DataTable/chart.tsx","views/Home/DataTable/index.tsx","components/MySelect/index.tsx","views/Home/index.tsx"],"names":["cardBodyStyle","cardBody","padding","flex","WebkitBoxFlex","position","cardBodyPlain","paddingLeft","paddingRight","cardBodyProfile","marginTop","useStyles","makeStyles","styles","CardBody","props","classes","className","children","plain","profile","rest","cardBodyClasses","classNames","undefined","cardFooterStyle","cardFooter","paddingTop","margin","borderRadius","justifyContent","alignItems","display","backgroundColor","border","cardFooterProfile","cardFooterPlain","cardFooterStats","borderTop","grayColor","top","marginRight","marginLeft","width","height","fontSize","cardFooterChart","CardFooter","stats","chart","cardFooterClasses","cardHeaderStyle","cardHeader","marginBottom","borderBottom","background","zIndex","color","whiteColor","lineHeight","textAlign","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","boxShadow","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","CardHeader","icon","cardHeaderClasses","dashboardStyle","successText","successColor","dangerText","dangerColor","upArrowCardCategory","cardCategory","cardCategoryWhite","hexToRgb","cardTitle","minHeight","fontWeight","fontFamily","textDecoration","cardTitleWhite","dataFormat","labels","series","data","options","lineSmooth","Chartist","Interpolation","cardinal","tension","low","showArea","high","Math","max","chartPadding","right","bottom","left","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","dayjs","extend","relativeTime","MyChart","trend","compare","useState","setData","item","getData","a","getProductsById","productId","items","sort","b","Date","date","getTime","map","price","format","useEffect","listener","ArrowUpward","ArrowDownward","abs","toFixed","fromNow","useRowStyles","root","Row","row","React","open","setOpen","Fragment","TableRow","TableCell","IconButton","aria-label","size","onClick","component","scope","src","img","align","name","prefix","unit","toLocaleDateString","Box","Typography","variant","style","red","green","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","CustomLoadingOverlay","LinearProgress","connect","state","search","product","pagination","dispatch","setSearch","bindActionCreators","setProducts","loading","setLoading","handleSetItems","console","log","timer","TableContainer","Paper","Table","TableHead","TableBody","mt","Pagination","count","ceil","total","pageSize","page","currPage","onChange","event","clearTimeout","setTimeout","theme","createStyles","formControl","spacing","minWidth","selectEmpty","MySelect","value","setValue","FormControl","InputLabel","id","title","Select","labelId","target","handleEmit","MenuItem","val","key","categories","logging","info","mb","category","pt","ml","FormControlLabel","control","Switch","checked","isPromotion","label","DataTable"],"mappings":"+fAgBeA,EAhBY,CACvBC,SAAU,CACNC,QAAS,iBACTC,KAAM,WACNC,cAAe,IACfC,SAAU,YAEdC,cAAe,CACXC,YAAa,MACbC,aAAc,OAElBC,gBAAiB,CACbC,UAAW,SCLbC,EAAYC,YAAWC,GAEd,SAASC,EAASC,GAAuB,IAAD,EAC7CC,EAAUL,IACRM,EAAiDF,EAAjDE,UAAWC,EAAsCH,EAAtCG,SAAUC,EAA4BJ,EAA5BI,MAAOC,EAAqBL,EAArBK,QAAYC,EAFG,YAEMN,EAFN,4CAG7CO,EAAkBC,KAAU,mBAC7BP,EAAQf,UAAW,GADU,cAE7Be,EAAQV,cAAgBa,GAFK,cAG7BH,EAAQP,gBAAkBW,GAHG,cAI7BH,OAA0BO,IAAdP,GAJiB,IAMlC,OACI,6CAAKA,UAAWK,GAAqBD,GAArC,aACKH,K,WC0BEO,EA5Cc,CACzBC,WAAY,CACRxB,QAAS,IACTyB,WAAY,OACZC,OAAQ,cACRC,aAAc,IACdC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,OACTC,gBAAiB,cACjBC,OAAQ,KAEZC,kBAAmB,CACfzB,UAAW,SAEf0B,gBAAiB,CACb7B,YAAa,MACbC,aAAc,MACdyB,gBAAiB,eAErBI,gBAAiB,CACbC,UAAW,aAAeC,IAAU,IACpC7B,UAAW,OACX,QAAS,CACLL,SAAU,WACVmC,IAAK,MACLC,YAAa,MACbC,WAAY,MACZC,MAAO,OACPC,OAAQ,QAEZ,gDAAiD,CAC7CC,SAAU,OACVxC,SAAU,WACVmC,IAAK,MACLC,YAAa,MACbC,WAAY,QAGpBI,gBAAiB,CACbR,UAAW,aAAeC,IAAU,MCpCtC5B,EAAYC,YAAWC,GAEd,SAASkC,GAAWhC,GAAyB,IAAD,EACjDC,EAAUL,IAEZM,EAOAF,EAPAE,UACAC,EAMAH,EANAG,SACAC,EAKAJ,EALAI,MACAC,EAIAL,EAJAK,QACA4B,EAGAjC,EAHAiC,MACAC,EAEAlC,EAFAkC,MACG5B,EATgD,YAUnDN,EAVmD,4DAWjDmC,EAAoB3B,KAAU,mBAC/BP,EAAQU,YAAa,GADU,cAE/BV,EAAQoB,gBAAkBjB,GAFK,cAG/BH,EAAQmB,kBAAoBf,GAHG,cAI/BJ,EAAQqB,gBAAkBW,GAJK,cAK/BhC,EAAQ8B,gBAAkBG,GALK,cAM/BhC,OAA0BO,IAAdP,GANmB,IAQpC,OACI,6CAAKA,UAAWiC,GAAuB7B,GAAvC,aACKH,KCnBb,IA+GeiC,GA/Gc,CACzBC,WAAY,CACRlD,QAAS,YACTmD,aAAc,IACdC,aAAc,OACdC,WAAY,cACZC,OAAQ,eACR,wKAAyK,CACrKtD,QAAS,IACTG,SAAU,WACVoD,MAAOC,KAEX,gBAAiB,CACb7B,aAAc,6CAElB,mHAAoH,CAChH,yBAA0B,CACtBA,aAAc,MACd3B,QAAS,SAGjB,wBAAyB,CACrB2C,SAAU,OACVc,WAAY,OACZC,UAAW,SACXjB,MAAO,OACPC,OAAQ,OACRhB,OAAQ,iBAEZ,wDAAyD,CACrDiB,SAAU,OACVc,WAAY,OACZhB,MAAO,OACPC,OAAQ,OACRgB,UAAW,SACXC,SAAU,QACVR,aAAc,OAElB,mCAAoC,CAChCO,UAAW,UAGnBE,gBAAiB,CACbpB,WAAY,iBACZD,YAAa,kBAEjBsB,gBAAiB,CACb,oBAAqB,CACjBH,UAAW,SAEf,gCAAiC,CAC7BhC,OAAQ,iBAGhBoC,eAAgB,CACZ,mHAAoH,CAChHT,WAAY,cACZU,UAAW,QAEf,wBAAyB,CACrBtB,MAAO,OACPC,OAAQ,OACRgB,UAAW,SACXD,WAAY,QAEhB,QAAS,CACLhB,MAAO,OACPC,OAAQ,OACRgB,UAAW,SACXD,WAAY,OACZ/B,OAAQ,gBAGhBsC,kBAAmB,CACfT,MAAOC,IACP,yBAAyB,eAClBQ,MAGXC,kBAAmB,CACfV,MAAOC,IACP,yBAAyB,eAClBS,MAGXC,iBAAkB,CACdX,MAAOC,IACP,yBAAyB,eAClBU,MAGXC,eAAgB,CACZZ,MAAOC,IACP,yBAAyB,eAClBW,MAGXC,kBAAmB,CACfb,MAAOC,IACP,yBAAyB,eAClBY,MAGXC,eAAgB,CACZd,MAAOC,IACP,yBAAyB,eAClBa,OC/GT5D,GAAYC,YAAWC,IAEd,SAAS2D,GAAWzD,GAAyB,IAAD,EACjDC,EAAUL,KACRM,EAA4DF,EAA5DE,UAAWC,EAAiDH,EAAjDG,SAAUuC,EAAuC1C,EAAvC0C,MAAOtC,EAAgCJ,EAAhCI,MAAO6B,EAAyBjC,EAAzBiC,MAAOyB,EAAkB1D,EAAlB0D,KAASpD,EAFJ,YAEaN,EAFb,yDAGjD2D,EAAoBnD,KAAU,mBAC/BP,EAAQoC,YAAa,GADU,cAE/BpC,EAAQyC,EAAQ,cAAgBA,GAFD,cAG/BzC,EAAQ8C,gBAAkB3C,GAHK,cAI/BH,EAAQ+C,gBAAkBf,GAJK,cAK/BhC,EAAQgD,eAAiBS,GALM,cAM/BxD,OAA0BO,IAAdP,GANmB,IAQpC,OACI,6CAAKA,UAAWyD,GAAuBrD,GAAvC,aACKH,K,8CCiEEyD,GA7Ea,CACxBC,YAAa,CACTnB,MAAOoB,IAAa,IAExBC,WAAY,CACRrB,MAAOsB,IAAY,IAEvBC,oBAAqB,CACjBrC,MAAO,OACPC,OAAQ,QAEZI,MAAO,CACHS,MAAOlB,IAAU,GACjBP,QAAS,cACTa,SAAU,OACVc,WAAY,OACZ,QAAS,CACLnB,IAAK,MACLG,MAAO,OACPC,OAAQ,OACRvC,SAAU,WACVoC,YAAa,MACbC,WAAY,OAEhB,gDAAiD,CAC7CF,IAAK,MACLK,SAAU,OACVxC,SAAU,WACVoC,YAAa,MACbC,WAAY,QAGpBuC,aAAc,CACVxB,MAAOlB,IAAU,GACjBX,OAAQ,IACRiB,SAAU,OACVnC,UAAW,IACXiB,WAAY,OACZ0B,aAAc,KAElB6B,kBAAmB,CACfzB,MAAO,QAAU0B,YAASzB,KAAc,QACxC9B,OAAQ,IACRiB,SAAU,OACVnC,UAAW,IACX2C,aAAc,KAElB+B,UAAW,CACP3B,MAAOlB,IAAU,GACjB7B,UAAW,MACX2E,UAAW,OACXC,WAAY,MACZC,WAAY,6CACZlC,aAAc,MACdmC,eAAgB,OAChB,UAAW,CACP/B,MAAOlB,IAAU,GACjB+C,WAAY,MACZ3B,WAAY,MAGpB8B,eAAgB,CACZhC,MAAOC,IACPhD,UAAW,MACX2E,UAAW,OACXC,WAAY,MACZC,WAAY,6CACZlC,aAAc,MACdmC,eAAgB,OAChB,UAAW,CACP/B,MAAOlB,IAAU,GACjB+C,WAAY,MACZ3B,WAAY,O,+BCxBT+B,GAnDI,SAACC,EAAkBC,GAAnB,MAA8C,CAC7DC,KAAM,CACFF,SACAC,OAAQ,CAACA,IAEbE,QAAS,CACLC,WAAYC,KAASC,cAAcC,SAAS,CACxCC,QAAS,IAEbC,IAAK,EACLC,UAAU,EACVC,KAA4B,IAAtBC,KAAKC,IAAL,MAAAD,KAAI,aAAQX,IAClBa,aAAc,CACVjE,IAAK,EACLkE,MAAO,EACPC,OAAQ,GACRC,KAAM,IAIdC,UAAW,CACPC,KAAM,SAAUjB,GACM,SAAdA,EAAKkB,MAAiC,SAAdlB,EAAKkB,KAC7BlB,EAAKmB,QAAQC,QAAQ,CACjBC,EAAG,CACCC,MAAO,IACPC,IAAK,IACLC,KAAMxB,EAAKyB,KACNC,QACAC,MAAM,EAAG,GACTC,UAAU,EAAG5B,EAAK6B,UAAU9E,UAC5B+E,YACLC,GAAI/B,EAAKyB,KAAKC,QAAQI,YACtBE,OAAQ7B,KAAS8B,IAAIC,OAAOC,gBAGf,UAAdnC,EAAKkB,MACZlB,EAAKmB,QAAQC,QAAQ,CACjBgB,QAAS,CACLd,MA1CT,IA0CiBtB,EAAKqC,MAAQ,GACrBd,IA1CR,IA2CQC,KAAM,EACNO,GAAI,EACJC,OAAQ,c,oDChChCM,KAAMC,OAAOC,MAEb,IAAM1H,GAAYC,YAAWC,IA6EdyH,GA3EuB,SAACvH,GACnC,IAGqBwH,EAGHC,EANZxH,EAAUL,KADsD,EAE9C8H,mBAAS/C,GAAW,GAAI,KAFsB,mBAE/DG,EAF+D,KAEzD6C,EAFyD,KAG9DC,EAAS5H,EAAT4H,KAOFC,EAAO,uCAAG,oCAAAC,EAAA,sEACWC,aAAgBH,EAAKI,WADhC,gBACJlD,EADI,EACJA,KACFmD,EAAQnD,EAAKmD,MAAMC,MACrB,SAACJ,EAAGK,GAAJ,OAAU,IAAIC,KAAKN,EAAEO,MAAMC,UAAY,IAAIF,KAAKD,EAAEE,MAAMC,aAEtDzD,EAASoD,EAAMM,KAAI,SAACX,GAAD,OAAWA,EAAKY,SACnC5D,EAASqD,EAAMM,KAAI,SAACX,GAAD,OAAUR,KAAMQ,EAAKS,MAAMI,OAAO,YAC3Dd,EAAQhD,GAAWC,EAAQC,IAPf,2CAAH,qDAeb,OALA6D,qBAAU,WACNb,MAED,CAACD,EAAKI,YAGL,8BACI,eAACvE,GAAD,WACI,cAACA,GAAD,CAAYf,MAAOkF,EAAKH,QAAU,EAAI,SAAW,UAAjD,SACI,cAAC,KAAD,CACIvH,UAAU,WACV4E,KAAMA,EAAKA,KACXkB,KAAK,OACLjB,QAASD,EAAKC,QACd4D,SAAU7D,EAAKgB,cAGvB,eAAC/F,EAAD,WACI,oBAAIG,UAAWD,EAAQoE,UAAvB,wCAGA,oBAAGnE,UAAWD,EAAQiE,aAAtB,UACI,uBAAMhE,WAnCRuH,EAmC4BG,EAAKH,QAlC/CA,GAAW,EAAIxH,EAAQ4D,YAAc5D,EAAQ8D,YAkC7B,UACK6D,EAAKH,QAAU,EACZ,cAACmB,EAAA,EAAD,CACI1I,UAAWD,EAAQgE,sBAEvB2D,EAAKH,QAAU,EACf,cAACoB,EAAA,EAAD,CACI3I,UAAWD,EAAQgE,sBAGvB,cAAC,IAAD,CACI/D,UAAWD,EAAQgE,uBAjD9BuD,EAoDgBI,EAAKH,QAnD/BjC,KAAKsD,IAAY,IAARtB,GAAauB,QAAQ,GAAK,QAoDlB,IAhBZ,yDAoBJ,cAAC/G,GAAD,CAAYE,OAAK,EAAjB,SACI,sBAAKhC,UAAWD,EAAQgC,MAAxB,UACI,cAAC,KAAD,IADJ,YAC4BmF,KAAMQ,EAAKS,MAAMW,qBCnD3DC,GAAepJ,YAAgB,CACjCqJ,KAAM,CACF,QAAS,CACL3G,aAAc,YAK1B,SAAS4G,GAAInJ,GAA+B,IAInBwH,EAHb4B,EAAQpJ,EAARoJ,IAD+B,EAEfC,IAAM3B,UAAS,GAFA,mBAEhC4B,EAFgC,KAE1BC,EAF0B,KAGjCtJ,EAAUgJ,KAShB,OAJAP,qBAAU,WACNa,GAAQ,KACT,CAACH,IAGA,eAAC,IAAMI,SAAP,WACI,eAACC,EAAA,EAAD,CAAUvJ,UAAWD,EAAQiJ,KAA7B,UACI,cAACQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,aAAW,aACXC,KAAK,QACLC,QAAS,kBAAMP,GAASD,IAH5B,SAKKA,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,QAIZ,cAACI,EAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,MAAhC,SACI,cAAC,IAAD,CAAOC,IAAKb,EAAIc,QAEpB,cAACR,EAAA,EAAD,CAAWS,MAAM,OAAjB,SAAyBf,EAAIgB,OAC7B,cAACV,EAAA,EAAD,CAAWS,MAAM,QAAjB,SAA0Bf,EAAIiB,SAC9B,eAACX,EAAA,EAAD,CAAWS,MAAM,QAAjB,gBAA6Bf,EAAIZ,SACjC,cAACkB,EAAA,EAAD,CAAWS,MAAM,QAAjB,SAA0Bf,EAAIkB,OAC9B,cAACZ,EAAA,EAAD,CAAWS,MAAM,QAAjB,SACK,IAAI/B,KAAKgB,EAAIf,MAAMkC,uBAExB,cAACb,EAAA,EAAD,CAAWS,MAAM,QAAjB,SACI,eAACK,EAAA,EAAD,CACIvJ,QAAQ,OACRF,eAAe,SACfC,WAAW,SAHf,UAKI,cAACyJ,EAAA,EAAD,CACIC,QAAQ,QACRC,MAAO,CACHjI,MAAO0G,EAAI3B,QAAU,EAAImD,IAAI,KAAOC,IAAM,MAHlD,UAxCCrD,EA8CgB4B,EAAI3B,SA7CrB,IAARD,GAAauB,QAAQ,GAAK,OA+CjBK,EAAI3B,QAAU,EACX,cAAC,IAAD,CAAgBkD,MAAO,CAAEjI,MAAOkI,IAAI,QACpCxB,EAAI3B,QAAU,EACd,cAAC,IAAD,CAAkBkD,MAAO,CAAEjI,MAAOmI,IAAM,QAExC,cAAC,IAAD,CAAkBF,MAAO,CAAEjI,MAAOmI,IAAM,gBAKxD,cAACpB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIiB,MAAO,CAAEG,cAAe,EAAGlK,WAAY,GACvCmK,QAAS,EAFb,SAII,cAACC,EAAA,EAAD,CAAUC,GAAI3B,EAAM4B,QAAQ,OAAOC,eAAa,EAAhD,SACI,cAAC,GAAD,CAASvD,KAAMwB,aAQvC,SAASgC,KACL,OACI,qBAAKT,MAAO,CAAErL,SAAU,WAAYmC,IAAK,EAAGG,MAAO,QAAnD,SACI,cAACyJ,EAAA,EAAD,MAKZ,IAiFeC,gBAfS,SAACC,GAAD,MAAoC,CACxDC,OAAQD,EAAME,QAAQD,OACtBvD,MAAOsD,EAAME,QAAQxD,MACrByD,WAAYH,EAAME,QAAQC,eAGH,SACvBC,GAEA,MAAO,CACHC,UAAWC,YAAmBD,IAAWD,GACzCG,YAAaD,YAAmBC,IAAaH,MAItCL,EAjF4B,SAACtL,GAAgC,IAChEwL,EAAsDxL,EAAtDwL,OAAQM,EAA8C9L,EAA9C8L,YAAa7D,EAAiCjI,EAAjCiI,MAAO2D,EAA0B5L,EAA1B4L,UAAWF,EAAe1L,EAAf0L,WADwB,EAEzChE,oBAAS,GAFgC,mBAEhEqE,EAFgE,KAEvDC,EAFuD,KAIjEC,EAAc,uCAAG,sBAAAnE,EAAA,6DACnBkE,GAAW,GACXE,QAAQC,IAAIX,GAFO,SAGbM,EAAYN,GAHC,OAInBQ,GAAW,GAJQ,2CAAH,qDAOhBI,EAAa,KAgBjB,OALA1D,qBAAU,WACNuD,MAED,CAACT,IAGA,qCACI,eAACa,EAAA,EAAD,CAAgBtC,UAAWuC,IAAO3B,MAAO,CAAErL,SAAU,YAArD,UACMyM,EAAiB,cAACX,GAAD,IAAP,KACZ,eAACmB,EAAA,EAAD,CAAO3C,aAAW,oBAAlB,UACI,cAAC4C,EAAA,EAAD,UACI,eAAC/C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWS,MAAM,OAAjB,kBACA,cAACT,EAAA,EAAD,CAAWS,MAAM,QAAjB,uBACA,cAACT,EAAA,EAAD,CAAWS,MAAM,QAAjB,mBACA,cAACT,EAAA,EAAD,CAAWS,MAAM,QAAjB,kBACA,cAACT,EAAA,EAAD,CAAWS,MAAM,QAAjB,kBACA,cAACT,EAAA,EAAD,CAAWS,MAAM,QAAjB,wBAGR,cAACsC,EAAA,EAAD,UACMxE,EAEIA,EAAMM,KAAI,SAACa,EAAKjC,GAAN,OACN,cAACgC,GAAD,CAAiBC,IAAKA,GAAZjC,MAFd,aAOlB,cAACqD,EAAA,EAAD,CAAKvJ,QAAQ,OAAOF,eAAe,WAAW2L,GAAI,EAAlD,SACI,cAACC,EAAA,EAAD,CACIC,MAAOpH,KAAKqH,KAAKnB,EAAWoB,MAAQtB,EAAOuB,UAC3CrC,QAAQ,WACRhI,MAAM,UACNsK,KAAMxB,EAAOyB,SACbC,SA/CK,SAACC,EAAmCF,GACjDb,GAAOgB,aAAahB,GACxBA,EAAQiB,YAAW,WACfzB,EAAU,2BACHJ,GADE,IAELyB,gBAEL,gB,2DC1ILrN,GAAYC,aAAW,SAACyN,GAAD,OACzBC,aAAa,CACTC,YAAa,CACT3M,OAAQyM,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,YAAa,CACThO,UAAW2N,EAAMG,QAAQ,SAiCtBG,GA5B0B,SAAC5N,GACtC,IAAMC,EAAUL,KAD2D,EAEjDyJ,IAAM3B,SAAS,IAFkC,mBAEpEmG,EAFoE,KAE7DC,EAF6D,KAS3E,OACI,eAACC,GAAA,EAAD,CAAa7N,UAAWD,EAAQuN,YAAhC,UACI,cAACQ,GAAA,EAAD,CAAYC,GAAG,2BAAf,SAA2CjO,EAAMkO,QACjD,cAACC,GAAA,EAAD,CACIC,QAAQ,2BACRH,GAAG,qBACHJ,MAAOA,EACPX,SAZS,SAACC,GAClBW,EAASX,EAAMkB,OAAOR,OACtB7N,EAAMsO,WAAWnB,EAAMkB,OAAOR,QAM1B,SAMK7N,EAAMiI,MAAMM,KAAI,SAACX,GAAD,OACb,cAAC2G,GAAA,EAAD,CAAUV,MAAOjG,EAAK4G,IAAtB,SACK5G,EAAK6G,KADsB7G,EAAK6G,c,oBCvBnDC,GAAa,CACf,CAAED,IAAK,iBAAkBD,IAAK,IAC9B,CAAEC,IAAK,cAAeD,IAAK,0BAC3B,CAAEC,IAAK,SAAUD,IAAK,UACtB,CAAEC,IAAK,SAAUD,IAAK,UACtB,CAAEC,IAAK,sBAAuBD,IAAK,uBACnC,CAAEC,IAAK,gBAAiBD,IAAK,iBAC7B,CAAEC,IAAK,eAAgBD,IAAK,yBAC5B,CAAEC,IAAK,OAAQD,IAAK,QACpB,CACIC,IAAK,UACLD,IAAK,iCAsEElD,uBAfS,SAACC,GAAD,MAAoC,CACxDC,OAAQD,EAAME,QAAQD,OACtBvD,MAAOsD,EAAME,QAAQxD,MACrByD,WAAYH,EAAME,QAAQC,eAGH,SACvBC,GAEA,MAAO,CACHC,UAAWC,YAAmBD,IAAWD,GACzCG,YAAaD,YAAmBC,IAAaH,MAItCL,EAlEoB,SAACtL,GAAgC,IACxDoK,EAA4BpK,EAA5BoK,KAAMoB,EAAsBxL,EAAtBwL,OAAQI,EAAc5L,EAAd4L,UAEtBlD,qBAAU,WACNiG,KAAQC,KAAR,kBAAwBxE,MACzB,CAACA,IAoBJ,OACI,gCACI,eAACI,EAAA,EAAD,CAAKvJ,QAAQ,OAAO4N,GAAI,EAAxB,UACI,cAAC,GAAD,CACI5G,MAAOyG,GACPJ,WAvBG,SAACE,GAChB5C,EAAU,2BACHJ,GADE,IAELsD,SAAUN,EACVvB,SAAU,MAoBFiB,MAAM,aAEV,cAAC1D,EAAA,EAAD,CAAKuE,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACIC,QAAS5D,EAAO6D,YAChBnC,SAvBF,SACtBC,EACAkC,GAEAzD,EAAU,2BACHJ,GADE,IAEL6D,kBAkBoB3M,MAAM,YAGd4M,MAAM,wBAIlB,cAACC,GAAD,CAAWnF,KAAK","file":"static/js/4.73ab898c.chunk.js","sourcesContent":["const cardBodyStyle: any = {\n    cardBody: {\n        padding: '0.9375rem 20px',\n        flex: '1 1 auto',\n        WebkitBoxFlex: '1',\n        position: 'relative',\n    },\n    cardBodyPlain: {\n        paddingLeft: '5px',\n        paddingRight: '5px',\n    },\n    cardBodyProfile: {\n        marginTop: '15px',\n    },\n};\n\nexport default cardBodyStyle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// core components\nimport styles from '../../assets/jss/cardBodyStyle';\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props: CardBodyProps) {\n    const classes = useStyles();\n    const { className, children, plain, profile, ...rest } = props;\n    const cardBodyClasses = classNames({\n        [classes.cardBody]: true,\n        [classes.cardBodyPlain]: plain,\n        [classes.cardBodyProfile]: profile,\n        [className]: className !== undefined,\n    });\n    return (\n        <div className={cardBodyClasses} {...rest}>\n            {children}\n        </div>\n    );\n}\n\ninterface CardBodyProps {\n    children?: React.ReactNode;\n    className?: string | any;\n    profile?: boolean;\n    plain?: boolean;\n    [rest: string]: any;\n}\n","import { grayColor } from './styles';\n\nconst cardFooterStyle: any = {\n    cardFooter: {\n        padding: '0',\n        paddingTop: '10px',\n        margin: '0 15px 10px',\n        borderRadius: '0',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: 'transparent',\n        border: '0',\n    },\n    cardFooterProfile: {\n        marginTop: '-15px',\n    },\n    cardFooterPlain: {\n        paddingLeft: '5px',\n        paddingRight: '5px',\n        backgroundColor: 'transparent',\n    },\n    cardFooterStats: {\n        borderTop: '1px solid ' + grayColor[10],\n        marginTop: '20px',\n        '& svg': {\n            position: 'relative',\n            top: '4px',\n            marginRight: '3px',\n            marginLeft: '3px',\n            width: '16px',\n            height: '16px',\n        },\n        '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n            fontSize: '16px',\n            position: 'relative',\n            top: '4px',\n            marginRight: '3px',\n            marginLeft: '3px',\n        },\n    },\n    cardFooterChart: {\n        borderTop: '1px solid ' + grayColor[10],\n    },\n};\n\nexport default cardFooterStyle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\n// core components\nimport styles from '../../assets/jss/cardFooterStyle';\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardFooter(props: CardFooterProps) {\n    const classes = useStyles();\n    const {\n        className,\n        children,\n        plain,\n        profile,\n        stats,\n        chart,\n        ...rest\n    } = props;\n    const cardFooterClasses = classNames({\n        [classes.cardFooter]: true,\n        [classes.cardFooterPlain]: plain,\n        [classes.cardFooterProfile]: profile,\n        [classes.cardFooterStats]: stats,\n        [classes.cardFooterChart]: chart,\n        [className]: className !== undefined,\n    });\n    return (\n        <div className={cardFooterClasses} {...rest}>\n            {children}\n        </div>\n    );\n}\n\ninterface CardFooterProps {\n    children?: React.ReactNode;\n    className?: string | any;\n    profile?: boolean;\n    stats?: boolean;\n    plain?: boolean;\n    chart?: boolean;\n    [rest: string]: any;\n}\n","import {\n    warningCardHeader,\n    successCardHeader,\n    dangerCardHeader,\n    infoCardHeader,\n    primaryCardHeader,\n    roseCardHeader,\n    whiteColor,\n} from './styles';\n\nconst cardHeaderStyle: any = {\n    cardHeader: {\n        padding: '0.75rem 0',\n        marginBottom: '0',\n        borderBottom: 'none',\n        background: 'transparent',\n        zIndex: '3 !important',\n        '&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader': {\n            padding: '0',\n            position: 'relative',\n            color: whiteColor,\n        },\n        '&:first-child': {\n            borderRadius: 'calc(.25rem - 1px) calc(.25rem - 1px) 0 0',\n        },\n        '&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader': {\n            '&:not($cardHeaderIcon)': {\n                borderRadius: '3px',\n                padding: '15px',\n            },\n        },\n        '&$cardHeaderStats svg': {\n            fontSize: '36px',\n            lineHeight: '56px',\n            textAlign: 'center',\n            width: '36px',\n            height: '36px',\n            margin: '10px 10px 4px',\n        },\n        '&$cardHeaderStats i,&$cardHeaderStats .material-icons': {\n            fontSize: '36px',\n            lineHeight: '56px',\n            width: '56px',\n            height: '56px',\n            textAlign: 'center',\n            overflow: 'unset',\n            marginBottom: '1px',\n        },\n        '&$cardHeaderStats$cardHeaderIcon': {\n            textAlign: 'right',\n        },\n    },\n    cardHeaderPlain: {\n        marginLeft: '0px !important',\n        marginRight: '0px !important',\n    },\n    cardHeaderStats: {\n        '& $cardHeaderIcon': {\n            textAlign: 'right',\n        },\n        '& h1,& h2,& h3,& h4,& h5,& h6': {\n            margin: '0 !important',\n        },\n    },\n    cardHeaderIcon: {\n        '&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader': {\n            background: 'transparent',\n            boxShadow: 'none',\n        },\n        '& i,& .material-icons': {\n            width: '33px',\n            height: '33px',\n            textAlign: 'center',\n            lineHeight: '33px',\n        },\n        '& svg': {\n            width: '24px',\n            height: '24px',\n            textAlign: 'center',\n            lineHeight: '33px',\n            margin: '5px 4px 0px',\n        },\n    },\n    warningCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...warningCardHeader,\n        },\n    },\n    successCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...successCardHeader,\n        },\n    },\n    dangerCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...dangerCardHeader,\n        },\n    },\n    infoCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...infoCardHeader,\n        },\n    },\n    primaryCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...primaryCardHeader,\n        },\n    },\n    roseCardHeader: {\n        color: whiteColor,\n        '&:not($cardHeaderIcon)': {\n            ...roseCardHeader,\n        },\n    },\n};\n\nexport default cardHeaderStyle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../assets/jss/cardHeaderStyle';\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props: CardHeaderProps) {\n    const classes = useStyles();\n    const { className, children, color, plain, stats, icon, ...rest } = props;\n    const cardHeaderClasses = classNames({\n        [classes.cardHeader]: true,\n        [classes[color + 'CardHeader']]: color,\n        [classes.cardHeaderPlain]: plain,\n        [classes.cardHeaderStats]: stats,\n        [classes.cardHeaderIcon]: icon,\n        [className]: className !== undefined,\n    });\n    return (\n        <div className={cardHeaderClasses} {...rest}>\n            {children}\n        </div>\n    );\n}\n\ninterface CardHeaderProps {\n    children?: React.ReactNode;\n    className?: string | any;\n    icon?: boolean;\n    stats?: boolean;\n    plain?: boolean;\n    color?: 'warning' | 'success' | 'danger' | 'info' | 'primary' | 'rose';\n    [rest: string]: any;\n}\n","import {\n    successColor,\n    whiteColor,\n    grayColor,\n    hexToRgb,\n    dangerColor,\n} from './styles';\n\nconst dashboardStyle: any = {\n    successText: {\n        color: successColor[0],\n    },\n    dangerText: {\n        color: dangerColor[0],\n    },\n    upArrowCardCategory: {\n        width: '16px',\n        height: '16px',\n    },\n    stats: {\n        color: grayColor[0],\n        display: 'inline-flex',\n        fontSize: '12px',\n        lineHeight: '22px',\n        '& svg': {\n            top: '4px',\n            width: '16px',\n            height: '16px',\n            position: 'relative',\n            marginRight: '3px',\n            marginLeft: '3px',\n        },\n        '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n            top: '4px',\n            fontSize: '16px',\n            position: 'relative',\n            marginRight: '3px',\n            marginLeft: '3px',\n        },\n    },\n    cardCategory: {\n        color: grayColor[0],\n        margin: '0',\n        fontSize: '14px',\n        marginTop: '0',\n        paddingTop: '10px',\n        marginBottom: '0',\n    },\n    cardCategoryWhite: {\n        color: 'rgba(' + hexToRgb(whiteColor) + ',.62)',\n        margin: '0',\n        fontSize: '14px',\n        marginTop: '0',\n        marginBottom: '0',\n    },\n    cardTitle: {\n        color: grayColor[2],\n        marginTop: '0px',\n        minHeight: 'auto',\n        fontWeight: '300',\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: '3px',\n        textDecoration: 'none',\n        '& small': {\n            color: grayColor[1],\n            fontWeight: '400',\n            lineHeight: '1',\n        },\n    },\n    cardTitleWhite: {\n        color: whiteColor,\n        marginTop: '0px',\n        minHeight: 'auto',\n        fontWeight: '300',\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: '3px',\n        textDecoration: 'none',\n        '& small': {\n            color: grayColor[1],\n            fontWeight: '400',\n            lineHeight: '1',\n        },\n    },\n};\n\nexport default dashboardStyle;\n","import Chartist from 'chartist';\n\nconst delays = 80,\n    durations = 500;\n\nconst dataFormat = (labels: string[], series: number[]): any => ({\n    data: {\n        labels,\n        series: [series],\n    },\n    options: {\n        lineSmooth: Chartist.Interpolation.cardinal({\n            tension: 0,\n        }),\n        low: 0,\n        showArea: true,\n        high: Math.max(...series) * 1.1, // to set the high sa the biggest value + something for a better look\n        chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 10,\n            left: 0,\n        },\n    },\n    // for animation\n    animation: {\n        draw: function (data: any) {\n            if (data.type === 'line' || data.type === 'area') {\n                data.element.animate({\n                    d: {\n                        begin: 600,\n                        dur: 700,\n                        from: data.path\n                            .clone()\n                            .scale(1, 0)\n                            .translate(0, data.chartRect.height())\n                            .stringify(),\n                        to: data.path.clone().stringify(),\n                        easing: Chartist.Svg.Easing.easeOutQuint,\n                    },\n                });\n            } else if (data.type === 'point') {\n                data.element.animate({\n                    opacity: {\n                        begin: (data.index + 1) * delays,\n                        dur: durations,\n                        from: 0,\n                        to: 1,\n                        easing: 'ease',\n                    },\n                });\n            }\n        },\n    },\n});\n\nexport default dataFormat;\n","import { ArrowDownward, ArrowUpward } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport CardBody from '../../../components/Card/CardBody';\nimport CardFooter from '../../../components/Card/CardFooter';\nimport CardHeader from '../../../components/Card/CardHeader';\nimport AccessTime from '@material-ui/icons/AccessTime';\nimport ChartistGraph from 'react-chartist';\nimport styles from '../../../assets/jss/dashboardStyle';\nimport { makeStyles } from '@material-ui/core';\nimport dataFormat from './data';\nimport { IProductItem } from '../../../store/product/types';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport { getProductsById } from '../../../api/product';\n\ndayjs.extend(relativeTime);\n\nconst useStyles = makeStyles(styles);\n\nconst MyChart: React.FC<ChartProps> = (props: ChartProps): JSX.Element => {\n    const classes = useStyles();\n    const [data, setData] = useState(dataFormat([], []));\n    const { item } = props;\n    const formatTrend = (trend: number): string => {\n        return Math.abs(trend * 100).toFixed(2) + '%';\n    };\n    const getColor = (compare: number) =>\n        compare <= 0 ? classes.successText : classes.dangerText;\n\n    const getData = async () => {\n        const { data } = await getProductsById(item.productId);\n        const items = data.items.sort(\n            (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n        );\n        const series = items.map((item) => +item.price);\n        const labels = items.map((item) => dayjs(item.date).format('DD/MM'));\n        setData(dataFormat(labels, series));\n    };\n\n    useEffect(() => {\n        getData();\n        // eslint-disable-next-line\n    }, [item.productId]);\n\n    return (\n        <div>\n            <CardHeader>\n                <CardHeader color={item.compare > 0 ? 'danger' : 'success'}>\n                    <ChartistGraph\n                        className='ct-chart'\n                        data={data.data}\n                        type='Line'\n                        options={data.options}\n                        listener={data.animation}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <h6 className={classes.cardTitle}>\n                        Trends in the last 30 days\n                    </h6>\n                    <p className={classes.cardCategory}>\n                        <span className={getColor(item.compare)}>\n                            {item.compare > 0 ? (\n                                <ArrowUpward\n                                    className={classes.upArrowCardCategory}\n                                />\n                            ) : item.compare < 0 ? (\n                                <ArrowDownward\n                                    className={classes.upArrowCardCategory}\n                                />\n                            ) : (\n                                <TrendingFlatIcon\n                                    className={classes.upArrowCardCategory}\n                                />\n                            )}\n                            {formatTrend(item.compare)}\n                        </span>{' '}\n                        Compare the average price over the past 90 days.\n                    </p>\n                </CardBody>\n                <CardFooter chart>\n                    <div className={classes.stats}>\n                        <AccessTime /> updated {dayjs(item.date).fromNow()}\n                    </div>\n                </CardFooter>\n            </CardHeader>\n        </div>\n    );\n};\n\ninterface ChartProps {\n    item: IProductItem;\n}\n\nexport default MyChart;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Image from 'material-ui-image';\nimport { green, red } from '@material-ui/core/colors';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport { IAppState } from '../../../store';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { IAppActions } from '../../../store/models/actions';\nimport { bindActionCreators } from 'redux';\nimport { setProducts, setSearch } from '../../../store/product/actions';\nimport { connect } from 'react-redux';\nimport IProps, { IDispatchProps, IStateProps } from '../home.types';\nimport { LinearProgress } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MyChart from './chart';\nimport { IProductItem } from '../../../store/product/types';\n\nconst useRowStyles = makeStyles<any>({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nfunction Row(props: { row: IProductItem }) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useRowStyles();\n    const formatTrend = (trend: number): string => {\n        return (trend * 100).toFixed(2) + '%';\n    };\n\n    useEffect(() => {\n        setOpen(false);\n    }, [row]);\n\n    return (\n        <React.Fragment>\n            <TableRow className={classes.root}>\n                <TableCell>\n                    <IconButton\n                        aria-label='expand row'\n                        size='small'\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? (\n                            <KeyboardArrowUpIcon />\n                        ) : (\n                            <KeyboardArrowDownIcon />\n                        )}\n                    </IconButton>\n                </TableCell>\n                <TableCell component='th' scope='row'>\n                    <Image src={row.img} />\n                </TableCell>\n                <TableCell align='left'>{row.name}</TableCell>\n                <TableCell align='right'>{row.prefix}</TableCell>\n                <TableCell align='right'>NZ${row.price}</TableCell>\n                <TableCell align='right'>{row.unit}</TableCell>\n                <TableCell align='right'>\n                    {new Date(row.date).toLocaleDateString()}\n                </TableCell>\n                <TableCell align='right'>\n                    <Box\n                        display='flex'\n                        justifyContent='center'\n                        alignItems='center'\n                    >\n                        <Typography\n                            variant='body1'\n                            style={{\n                                color: row.compare > 0 ? red[500] : green[500],\n                            }}\n                        >\n                            {formatTrend(row.compare)}\n                        </Typography>\n                        {row.compare > 0 ? (\n                            <TrendingUpIcon style={{ color: red[500] }} />\n                        ) : row.compare < 0 ? (\n                            <TrendingDownIcon style={{ color: green[500] }} />\n                        ) : (\n                            <TrendingFlatIcon style={{ color: green[500] }} />\n                        )}\n                    </Box>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell\n                    style={{ paddingBottom: 0, paddingTop: 0 }}\n                    colSpan={9}\n                >\n                    <Collapse in={open} timeout='auto' unmountOnExit>\n                        <MyChart item={row} />\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nfunction CustomLoadingOverlay() {\n    return (\n        <div style={{ position: 'absolute', top: 0, width: '100%' }}>\n            <LinearProgress />\n        </div>\n    );\n}\n\nconst CollapsibleTable: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const { search, setProducts, items, setSearch, pagination } = props;\n    const [loading, setLoading] = useState(false);\n\n    const handleSetItems = async () => {\n        setLoading(true);\n        console.log(search);\n        await setProducts(search);\n        setLoading(false);\n    };\n\n    let timer: any = null;\n    const handleChange = (event: React.ChangeEvent<unknown>, currPage: any) => {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(() => {\n            setSearch({\n                ...search,\n                currPage,\n            });\n        }, 250);\n    };\n\n    useEffect(() => {\n        handleSetItems();\n        // eslint-disable-next-line\n    }, [search]);\n\n    return (\n        <>\n            <TableContainer component={Paper} style={{ position: 'relative' }}>\n                {!loading ? null : <CustomLoadingOverlay />}\n                <Table aria-label='collapsible table'>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell>Image</TableCell>\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='right'>Promotion</TableCell>\n                            <TableCell align='right'>Price</TableCell>\n                            <TableCell align='right'>Unit</TableCell>\n                            <TableCell align='right'>Time</TableCell>\n                            <TableCell align='right'>Trend</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {!items\n                            ? null\n                            : items.map((row, index) => (\n                                  <Row key={index} row={row} />\n                              ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Box display='flex' justifyContent='flex-end' mt={2}>\n                <Pagination\n                    count={Math.ceil(pagination.total / search.pageSize)}\n                    variant='outlined'\n                    color='primary'\n                    page={search.currPage}\n                    onChange={handleChange}\n                />\n            </Box>\n        </>\n    );\n};\n\nconst mapStateToProps = (state: IAppState): IStateProps => ({\n    search: state.product.search,\n    items: state.product.items,\n    pagination: state.product.pagination,\n});\n\nconst mapDispatchToProps = (\n    dispatch: ThunkDispatch<IAppState, {}, IAppActions>\n): IDispatchProps => {\n    return {\n        setSearch: bindActionCreators(setSearch, dispatch),\n        setProducts: bindActionCreators(setProducts, dispatch),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollapsibleTable);\n","import React from 'react';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport ISelectProps, { IItems } from './myselect.types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    })\n);\n\nconst MySelect: React.FC<ISelectProps> = (props: ISelectProps): JSX.Element => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('');\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(event.target.value as string);\n        props.handleEmit(event.target.value as string);\n    };\n\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel id='demo-simple-select-label'>{props.title}</InputLabel>\n            <Select\n                labelId='demo-simple-select-label'\n                id='demo-simple-select'\n                value={value}\n                onChange={handleChange}\n            >\n                {props.items.map((item: IItems) => (\n                    <MenuItem value={item.val} key={item.key}>\n                        {item.key}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default MySelect;\n","import React, { useEffect } from 'react';\nimport IProps, { IDispatchProps, IStateProps } from './home.types';\nimport DataTable from './DataTable';\nimport logging from '../../config/logging';\nimport MySelect from '../../components/MySelect';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { IAppState } from '../../store';\nimport { IAppActions } from '../../store/models/actions';\nimport { setProducts, setSearch } from '../../store/product/actions';\nimport { Box, FormControlLabel, Switch } from '@material-ui/core';\n\nconst categories = [\n    { key: 'All Categories', val: '' },\n    { key: 'Fresh foods', val: 'fresh-foods-and-bakery' },\n    { key: 'Pantry', val: 'pantry' },\n    { key: 'Drinks', val: 'drinks' },\n    { key: 'Beer cider and wine', val: 'beer-cider-and-wine' },\n    { key: 'Personal care', val: 'personal-care' },\n    { key: 'Baby toddler', val: 'baby-toddler-and-kids' },\n    { key: 'Pets', val: 'pets' },\n    {\n        key: 'Kitchen',\n        val: 'kitchen-dining-and-household',\n    },\n];\n\nconst HomePage: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const { name, search, setSearch } = props;\n\n    useEffect(() => {\n        logging.info(`Loading ${name}`);\n    }, [name]);\n\n    const handleEmit = (val: string) => {\n        setSearch({\n            ...search,\n            category: val,\n            currPage: 1, // have to reset current page to page 1\n        });\n    };\n\n    const handleIsPromotion = (\n        event: React.ChangeEvent<HTMLInputElement>,\n        isPromotion: boolean\n    ) => {\n        setSearch({\n            ...search,\n            isPromotion,\n        });\n    };\n\n    return (\n        <div>\n            <Box display='flex' mb={2}>\n                <MySelect\n                    items={categories}\n                    handleEmit={handleEmit}\n                    title='Category'\n                />\n                <Box pt={3} ml={2}>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={search.isPromotion}\n                                onChange={handleIsPromotion}\n                                color='primary'\n                            />\n                        }\n                        label='Only Promotion'\n                    />\n                </Box>\n            </Box>\n            <DataTable name='paknsave_table'></DataTable>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: IAppState): IStateProps => ({\n    search: state.product.search,\n    items: state.product.items,\n    pagination: state.product.pagination,\n});\n\nconst mapDispatchToProps = (\n    dispatch: ThunkDispatch<IAppState, {}, IAppActions>\n): IDispatchProps => {\n    return {\n        setSearch: bindActionCreators(setSearch, dispatch),\n        setProducts: bindActionCreators(setProducts, dispatch),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"],"sourceRoot":""}